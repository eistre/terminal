// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// https://lucia-auth.com/database-adapters/prisma/
model User {
  id            String          @id @unique
  name          String
  expireTime    DateTime?
  role          Role            @default(USER)
  auth_session  Session[]
  key           Key[]
  CompletedTask CompletedTask[]
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Exercise {
  id          Int    @id @default(autoincrement())
  title       String @unique
  description String
  tasks       Task[]

  @@index([id])
}

model Task {
  id           Int             @id @default(autoincrement())
  title        String
  content      String
  hint         String?
  regex        String
  exercise_id  Int
  exercise     Exercise        @relation(references: [id], fields: [exercise_id], onDelete: Cascade)
  completed_by CompletedTask[]

  @@index([id])
  @@index([exercise_id])
}

model CompletedTask {
  id      Int    @id @default(autoincrement())
  user_id String
  user    User   @relation(references: [id], fields: [user_id], onDelete: Cascade)
  task_id Int
  task    Task   @relation(references: [id], fields: [task_id], onDelete: Cascade)

  @@unique([task_id, user_id])
  @@index([id])
  @@index([task_id, user_id])
}

enum Role {
  USER
  ADMIN
}
